# Example nginx configuration for ngx_vts_rust module

# Load the module
load_module /path/to/target/release/libngx_vts_rust.so;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Enable VTS zone tracking globally
    vts_status_zone on;

    # Log format for debugging (optional)
    log_format vts_log '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time';

    # Example server block
    server {
        listen 80;
        server_name example.com www.example.com;
        
        access_log /var/log/nginx/access.log vts_log;
        error_log /var/log/nginx/error.log;

        # Regular content
        location / {
            root /var/www/html;
            index index.html index.htm;
        }

        # VTS status endpoint
        location /status {
            vts_status;
            
            # Security: limit access to status endpoint
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 192.168.0.0/16;
            deny all;
        }

        # Optional: status endpoint with different path
        location /nginx_status {
            vts_status;
            allow 127.0.0.1;
            deny all;
        }
    }

    # Another server block for testing multi-zone tracking
    server {
        listen 80;
        server_name api.example.com;
        
        access_log /var/log/nginx/api_access.log vts_log;

        location /api/ {
            # Your API backend
            proxy_pass http://backend_servers;
        }

        # Dedicated status endpoint for API server
        location /api/status {
            vts_status;
            allow 127.0.0.1;
            deny all;
        }
    }

    # Default server for unmatched requests
    server {
        listen 80 default_server;
        server_name _;
        
        return 444;  # Drop connection
    }
}

# Example usage commands:
#
# 1. Test the module (Prometheus metrics):
#    curl -s http://localhost/status
#
# 2. Check specific metrics:
#    curl -s http://localhost/status | grep nginx_vts_connections
#    curl -s http://localhost/status | grep nginx_vts_server_requests
#
# 3. Monitor specific server zone:
#    curl -s http://localhost/status | grep 'zone="example.com"'
#
# 4. Get response status metrics:
#    curl -s http://localhost/status | grep nginx_vts_server_responses
#
# 5. Use with Prometheus scraping:
#    # Add to prometheus.yml:
#    # - targets: ['your-nginx-server:80']
#    #   metrics_path: '/status'